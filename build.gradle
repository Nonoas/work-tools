plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group 'indi.nonoas'
version '1.3.3'

sourceCompatibility = '17'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}


repositories {
    mavenLocal()
    mavenCentral()
}

javafx {
    version = "17.0.0.1"
    modules = ['javafx.controls', 'javafx.swing']
}

dependencies {
    implementation 'com.melloware:jintellitype:1.4.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.h2database:h2:2.2.220'
    implementation 'com.alibaba:fastjson:2.0.9.graal'
    implementation 'net.sf.dozer:dozer:5.4.0'
    implementation 'org.freemarker:freemarker:2.3.30'
    implementation 'org.flywaydb:flyway-core:10.10.0'
    implementation 'cn.hutool:hutool-db:5.8.25'
    // https://mvnrepository.com/artifact/com.googlecode.juniversalchardet/juniversalchardet
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'

    implementation 'org.openjfx:javafx-controls:17.0.0.1'
    implementation 'org.openjfx:javafx-fxml:17.0.0.1'

}

mainClassName = 'indi.nonoas.worktools.MainKt'

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'indi.nonoas.worktools.MainKt'
    }
    from configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

tasks.register('zip', Zip) {
    dependsOn clean
    dependsOn jar
    // 包含项目根目录下的文件
    from('build/libs') {
        include('*.jar')
    }
    from(projectDir) {
        include 'func/**' // 包含指定的文件
        include 'db/**'
    }

    archiveFileName = "worktools-${project.version}.zip" // 压缩文件的名称
    destinationDirectory = file("$buildDir/distribution") // 压缩文件的输出目录

    group = "_myTask"
}